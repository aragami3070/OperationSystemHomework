= Ответы на вопросы:

1. Основные ресурсы компьютера, доступные пользователю: центральный процессор (CPU), оперативная память (RAM), прерывания (IRQ), прямой доступ к памяти (DMA), порты ввода/вывода (I/O ports), адреса памяти. 3

2. Посмотреть доступные ресурсы компьютера можно через диспетчер задач. 17 Для этого нужно открыть его клавишами Shift+Ctrl+Esc или в меню по клавишам Win+X и перейти на вкладку «Производительность». 7 В открывшемся окне можно посмотреть текущее использование ресурсов компьютера по основным категориям: процессор, память, диски, сеть и графический процессор. 1

3. Назначение компонентов DirectX: DirectX --- это набор API, разработанных для решения задач, связанных с программированием под Microsoft Windows. Наиболее широко используется при написании компьютерных игр. 10

4. OLE-объекты и ActiveX подключаются через регистрацию: если элемент управления ActiveX устанавливается с помощью программы установки, поставляемой вместе с элементом управления ActiveX, регистрация происходит автоматически. Для ручной регистрации используются regActiveX32.exe или regsvr32.exe. 6

5. Основные файлы конфигурации Windows 9x: SYSTEM.DAT, USER.DAT --- реестр Windows, MSDOS.SYS --- низкоуровневые настройки загрузчика, WIN.INI и SYSTEM.INI --- конфигурационные файлы Windows 3.1, обработанные Windows 9x. 8

6. Основные файлы конфигурации Windows NT: в Windows NT основой конфигурации системы стал реестр, который содержит все основные данные по конфигурации как самой ОС, так и прикладных программ. 5

7. Структура файлов конфигурации ОС: в Windows 9x файлы конфигурации включают WIN.INI и SYSTEM.INI, которые имеют текстовый формат и служат для поддержания совместимости со старыми программами и оборудованием. 2 В Windows NT основой конфигурации системы стал реестр, который на диске хранится в файлах DEFAULT, SOFTWARE, SYSTEM, а при запуске системы из этих файлов собирается единая база данных. 5

8. Основные параметры процесса в Windows: в диспетчере задач нагрузка на ресурсы компьютера в процентном выражении отображается прямо в главной вкладке. Вверху таблицы даётся общий процент нагрузки на процессор, оперативную память, жёсткие диски (на суммарно все диски), а также на сеть. В самой таблице можно видеть детализацию, какие системные и сторонние процессы сколько какого ресурса потребляют. 7

9. Разница между загрузкой процессора и загрузкой оперативной памяти: в диспетчере задач раздел «ЦП» показывает текущее использование центрального процессора, а раздел «Память» --- использование оперативной памяти (какой объём занят в настоящий момент и какой объём остаётся свободным). 1

10. Идентификатор Process Identifier (PID) --- это цифровой идентификатор процесса в системе, который позволяет найти процесс по его номеру. 6 Идентификаторы процессов повторно используемые, поэтому они определяют процесс только в течение времени его существования. 1

11. Выделенная память процесса --- это общий объём физической и виртуальной памяти, который операционная система резервирует для всех активных приложений и процессов. В этом объёме памяти хранятся данные и инструкции, необходимые для выполнения программ и процессов. 8

12. Механизм использования прерываний в процессе: прерывание --- сигнал, сообщающий процессору о наступлении какого-либо события. При этом выполнение текущей последовательности команд приостанавливается и управление передаётся обработчику прерывания, который реагирует на событие и обслуживает его, после чего возвращает управление в прерванный код. 10

13. Виртуальная память процесса --- это ресурс, который предоставляет операционная система всем процессам. Все данные, с которыми процессы непосредственно работают, хранятся именно в виртуальной памяти. Название «виртуальная» произошло из-за того, что процессу неизвестно реальное (физическое) расположение памяти --- она может находиться как в оперативной памяти (ОЗУ), так и на диске. 2

14. Выгружаемый пул процесса --- это область системной памяти, которую компоненты операционной системы используют для выполнения назначенных задач. Страницы в выгружаемом пуле могут выгружаться в файл подкачки, если они не используются системой в течение длительного периода времени. 1

15. Невыгружаемый пул процесса --- это область системной памяти, которую компоненты операционной системы используют по мере выполнения назначенных задач. Страницы невыгружаемого пула нельзя вывести на страницы в файл подкачки, они остаются в основной памяти до тех пор, пока выделены. 1

16. Приоритет процесса --- мера объёма системных ресурсов, выделенных процессу. 6 Потоки внутри процесса могут повышать и уменьшать собственный базовый приоритет относительно базового приоритета процесса. 1

17. Базовый приоритет процесса --- это текущий базовый приоритет этого процесса. Потоки внутри процесса могут повышать и уменьшать собственный базовый приоритет относительно базового приоритета процесса. 1

18. Поток процесса --- это количество потоков, активных в данный момент в этом процессе. Все потоки в процессе совместно используют одно и то же адресное пространство и имеют доступ к одним и тем же данным. 1

19. Дескриптор процесса --- это полное число дескрипторов файлов, поддерживаемых процессом. Эта характеристика позволяет оценить, насколько процесс зависит от файловой системы. 6

20. Контекст процесса --- это структурированная и распределённая по типам совокупность всех данных, имеющихся на входе в процесс, а также добавляющихся или изменяющихся при выполнении этапов процесса. 1

21. Процесс --- это программа пользователя при её выполнении. 3 Процесс характеризует совокупность набора исполняющихся команд, ассоциированных с ним ресурсов (выделенная для исполнения память или адресное пространство, стеки, используемые файлы и устройства ввода-вывода и т.д.) и информации о текущем моменте его исполнения (значения регистров, программного счётчика, состояние стека и значения переменных). 6

22. Основные состояния процесса:

    - Порождение. Состояние процесса, когда он уже создан, но не готов к запуску. 2

    - Выполнение. 27 Активное состояние процесса, во время которого процесс обладает всеми необходимыми ресурсами и непосредственно выполняется процессором. 2

    - Ожидание. 27 Пассивное состояние процесса, процесс заблокирован и не может выполняться по своим внутренним причинам, так как ждёт осуществления некоторого события, например, завершения операции ввода-вывода, получения сообщения от другого процесса, освобождения какого-либо необходимого ему ресурса. 2

    - Готовность. 27 Также пассивное состояние процесса: процесс имеет все требуемые для него ресурсы, он готов выполняться, однако процессор занят выполнением другого процесса. 2

    - Завершение. Конечное состояние в жизненном цикле процесса, процесс выгружается из памяти и разрушаются все структуры данных, связанные с ним. 2

23. Очереди процесса --- это дескрипторы отдельных процессов, объединённые в списки. Такая организация очередей позволяет легко их переупорядочивать, включать и исключать процессы, переводить процессы из одного состояния в другое. 8

24. Процесс создаётся операционной системой, для этого нужно: 7

    - присвоить процессу имя; 7

    - добавить информацию о процессе в список процессов; 7

    - определить приоритет процесса; 7

    - сформировать блок управления процессом; 7

    - предоставить процессу нужные ему ресурсы. 7

25. Алгоритм планирования процессов включает в себя решение задач по поочерёдному выделению процессам квантов процессорного времени. Планировщики ОС планируют это, используя долговременный и кратковременный планировщики. Долговременный планировщик определяет, какие процессы должны быть перемещены в очередь готовых процессов, а кратковременный --- какие процессы должны быть выполнены следующими на процессорах компьютерной системы. 3

26. Смена активного процесса (переключение контекста) происходит, когда операционная система сохраняет состояние старого процесса и загружает сохранённое состояние для нового процесса. 3

27. Два основных алгоритма планирования процессов:

    - FIFO (первый пришёл --- первый обслужился) подходит для простых систем с однородной нагрузкой. 4

    - Round Robin справедливо распределяет процессорное время, но требует точной настройки. 4

    - SJF (Shortest Job First) обеспечивает наименьшее среднее время ожидания и выполнения, однако может вызвать голодание долгих процессов и требует точной оценки времени выполнения. 4

28. Две основных процедуры планирования процессов:

    - Невытесняющая многозадачность (non-preemptive multitasking) --- процесс сохраняет процессор до тех пор, пока либо не завершится, либо не переключится в состояние ожидания. 4

    - Вытесняющая многозадачность (preemptive multitasking) --- операционная система может временно приостановить выполнение текущего процесса, чтобы переключить процессор на выполнение другого, более приоритетного. 4

29. Невытесняющая многозадачность означает, что управление системой теряется на произвольный период времени, который определяется приложением. Если приложение тратит слишком много времени на выполнение какой-либо работы, пользователь не может переключиться с этой задачи на другую задачу. 8

30. Вытесняющая многозадачность предполагает, что если при работе процесса появляется другой процесс в какой-либо более приоритетной очереди, исполняющийся процесс вытесняется появившимся. 10

31. Критическая секция --- участок исполняемого кода программы, в котором производится доступ к общему ресурсу (данным или устройству), который не должен быть одновременно использован более чем одним потоком выполнения. Это объект синхронизации потоков, позволяющий предотвратить одновременное выполнение некоторого набора операций (обычно связанных с доступом к данным) несколькими потоками. 28

32. Семафоры Дейкстра --- это целочисленные переменные, которые используются для решения проблем синхронизации и исключения состязательных ситуаций. Дейкстра предложил использовать две операции с семафорами: down (выясняет, отличается ли значение семафора от 0) и up (увеличивает значение семафора на 1). 5

33. Тупик --- взаимная блокировка потоков, когда ни один из процессов не может завершить начатую работу и тупиковая ситуация не может разрешиться без внешнего воздействия. 39 Необходимым условием возникновения тупика является потребность потока сразу в нескольких ресурсах. 3

34. Тупик отличается от очереди тем, что очередь --- это нормальное явление, когда ресурс недоступен в данный момент, но освободится через некоторое время, позволив потоку продолжить выполнение, а тупик --- это неразрешимая ситуация. 3

35. Дедлок (deadlock) --- ситуация в многозадачной среде или СУБД, при которой несколько процессов находятся в состоянии бесконечного ожидания ресурсов, захваченных самими этими процессами. 4

37. Предотвращение тупиков выполняется путём разработки алгоритмов, например задания каждой блокировке приоритета. 10

38. Распознавание тупиков является нетривиальной задачей, особенно когда тупиковая ситуация образована многими процессами, использующими много ресурсов. 3

39. Восстановление работоспособности ОС после тупиков предполагает создание механизма выхода из взаимоблокировок, который не «ломает» программу. 10

40. Монитор системы --- это средство синхронизации потоков, которое позволяет управлять последовательностью доступа потоков к объекту. 9

41. Распределению подлежит вся оперативная память, не занятая операционной системой. Обычно ОС располагается в самых младших адресах, однако может занимать и самые старшие адреса. 2

42. Типы адресов, используемых в ОС:

    - Символьные имена --- идентификаторы переменных и команд в программе, присваиваемые программистом. 7

    - Виртуальные адреса --- условные адреса, присваиваемые транслятором (обычно начальный адрес программы --- нулевой). 7

    - Физические адреса --- номера ячеек оперативной памяти, в которых располагаются переменные и команды. 7

43. Символьные имена используются для идентификации переменных и команд при написании программы на алгоритмическом языке или ассемблере. 2

44. Виртуальные адреса используются процессорами при чтении или записи в память. Во время этих операций процессор преобразует виртуальный адрес в физический. 4

45. Виртуальное адресное пространство --- совокупность виртуальных адресов процесса. 7

46. Физические адреса используются для описания точного расположения необходимых данных в памяти. 5 Это номера ячеек оперативной памяти, к которым можно обратиться, указав их порядковый номер (адрес). 7

47. Назначение перемещающего загрузчика --- замещение при загрузке процесса всех относительных ссылок абсолютными адресами памяти, определёнными на основе базового адреса загруженного процесса. 8

48. Смещение адресов --- разность между адресом элемента данных и адресом начала его блока. 1

49. Методы управления памятью компьютера:

    - Распределение памяти разделами переменной величины. В этом случае память машины не делится заранее на разделы. Сначала вся память свободна, каждой вновь поступающей задаче выделяется необходимая ей память. Если достаточный объём памяти отсутствует, то задача не принимается на выполнение и стоит в очереди. После завершения задачи память освобождается, и на это место может быть загружена другая задача. 2

    - Фиксированная схема распределения. При использовании фиксированной схемы распределения процесс всегда будет назначаться одному и тому же разделу памяти после его выгрузки и последующей загрузки в память. Это позволяет применять простейший загрузчик, который замещает при загрузке процесса все относительные ссылки абсолютными адресами памяти, определёнными на основе базового адреса загруженного процесса. 8

50. Распределение памяти фиксированными разделами предполагает, что в каждом разделе может выполняться только одна программа. Так как в каждом разделе может выполняться только одна программа, то уровень мультипрограммирования заранее ограничен числом разделов независимо от того, какой размер имеют программы. Даже если программа имеет небольшой объём, она будет занимать весь раздел, что приводит к неэффективному использованию памяти. 2

51. Распределение памяти разделами переменной величины --- это метод, при котором память машины не делится заранее на разделы. Сначала вся память свободна, каждой вновь поступающей задаче выделяется необходимая ей память. Если достаточный объём памяти отсутствует, то задача не принимается на выполнение и стоит в очереди. После завершения задачи память освобождается, и на это место может быть загружена другая задача. Таким образом, в произвольный момент времени оперативная память представляет собой случайную последовательность занятых и свободных участков (разделов) произвольного размера. 39

52. Фрагментация памяти --- это дробление памяти на мелкие не смежные свободные области маленького размера. Возникает после выполнения системой большого числа запросов на память, таких, что размеры подходящих свободных участков памяти оказываются немного больше, чем требуемые. 5

53. Чтобы устранить фрагментацию памяти, внешнюю фрагментацию можно уменьшить или ликвидировать путём применения компактировки --- сдвига или перемешивания памяти с целью объединения всех не смежных свободных областей в один непрерывный блок. 5

54. Оверлей --- это сегмент программы, подгружаемый при необходимости во время её выполнения с внешнего запоминающего устройства в так называемую область перекрытия. 6

55. Виртуальная память --- метод управления памятью компьютера, позволяющий выполнять программы, требующие больше оперативной памяти, чем имеется в компьютере, путём автоматического перемещения частей программы между основной памятью и вторичным хранилищем (например, жёстким диском). 10

56. Принцип страничного распределения памяти: при страничном способе организации виртуальной памяти все фрагменты задачи считаются равными (одинакового размера). Эти одинаковые части называют страницами, и говорят, что оперативная память разбивается на физические страницы, а программа --- на виртуальные страницы. Часть виртуальных страниц задачи размещается в оперативной памяти, а часть --- во внешней памяти. 7

57. Принцип сегментного распределения памяти: виртуальное адресное пространство процесса делится на сегменты, размер которых определяется программистом с учётом смыслового значения содержащейся в них информации. Отдельный сегмент может представлять собой подпрограмму, массив данных и т.п.. При загрузке процесса часть сегментов помещается в оперативную память (при этом для каждого из этих сегментов операционная система подыскивает подходящий участок свободной памяти), а часть сегментов размещается в дисковой памяти. 3

58. Принцип странично-сегментного распределения памяти: сочетает в себе принципы страничного и сегментного распределения, при котором часть виртуальных страниц задачи размещается в оперативной памяти, а часть --- во внешней памяти, но уже в виде сегментов. 7

59. Свопинг --- это действия операционной системы по откачке (записи) образа неактивного процесса на диск или подкачке (считыванию) активного процесса в основную память. Необходимость выполнения подобных действий вызвана нехваткой основной памяти. 5

60. Иерархическая структура памяти современного компьютера: главная память (ОЗУ), кэш процессора, виртуальная память. 1410

61. Кэш-память --- это промежуточное звено, которое связывает главную память (ОЗУ) и регистры процессора. 1

62. Два типа физической организации устройств ввода/вывода:

    1. Блок-ориентированные устройства. Хранят информацию в блоках фиксированного размера, каждый из которых имеет свой собственный адрес. Самое распространённое блок-ориентированное устройство --- диск. 3

    2. Байт-ориентированные устройства. Не адресуемы и не позволяют производить операцию поиска, они генерируют или потребляют последовательность байтов. Примерами являются терминалы, строчные принтеры, сетевые адаптеры. 3

63. Электронные компоненты устройств ввода/вывода называются контроллерами устройства или адаптерами. 310 Контроллер может непосредственно управлять отдельным устройством (например, контроллер диска), а может управлять несколькими устройствами, связываясь с их контроллерами посредством специальных шин ввода-вывода (шина IDE, шина SCSI и т. д.). 10

64. Особенности программного обеспечения ввода/вывода в ОС:

    - Независимость от устройства. Программное обеспечение ввода-вывода гарантирует, что приложения могут использовать идентичные операции ввода-вывода независимо от конкретного аппаратного средства, с которым они взаимодействуют. 1

    - Буферизация и кэширование. Данные могут буферизоваться в памяти, чтобы уменьшить количество взаимодействий с оборудованием и повысить производительность. 1

    - Обработка ошибок. 13 Имеет решающее значение для обеспечения надёжности операций ввода-вывода на различных устройствах и системах. 1

    - Контроль параллелизма. Программа имеет решающее значение для контроля и синхронизации доступа к ресурсам ввода-вывода, гарантируя, что несколько методов или потоков могут взаимодействовать с устройствами ввода-вывода скоординированным и последовательным образом. 1

65. Основные уровни программного обеспечения ввода/вывода:

    - Обработка прерываний. Прерывания должны быть скрыты как можно глубже в недрах операционной системы, чтобы как можно меньшая часть ОС имела с ними дело. 3

    - Драйверы устройств. 23 Это программные модули, которые можно подключить к операционной системе для работы с определённым устройством. 2

    - Независимый от устройств слой операционной системы. Типичными функциями для этого слоя являются: обеспечение общего интерфейса к драйверам устройств, именование устройств, защита устройств, обеспечение независимого размера блока, буферизация, распределение памяти на блок-ориентированных устройствах, распределение и освобождение выделенных устройств, уведомление об ошибках. 3

    - Пользовательский слой программного обеспечения. Хотя большая часть программного обеспечения ввода-вывода находится внутри ОС, некоторая его часть содержится в библиотеках, связываемых с пользовательскими программами. 3

66. Обработка прерываний в ОС Windows: если при работе с внешним устройством вычислительная система задействует механизм прерываний, то при возникновении прерывания процессор, частично сохранив своё состояние, передаёт управление специальной программе обработки прерывания. Одна и та же процедура обработки прерывания может применяться для нескольких устройств ввода-вывода, поэтому первое действие программы обработки состоит в определении того, какое именно устройство выдало прерывание. 8

67. Драйверы устройств в ОС Windows: драйверы устройств --- это программное обеспечение, которое объясняет операционной системе, как работает и что умеет подключённое к компьютеру оборудование. Они помогают пользователю взаимодействовать с устройствами, например, распечатать документы с нужными настройками или поиграть в любимую игру с высоким качеством графики. 4

68. Функции программного обеспечения ОС, независимые от устройств ввода-вывода: обеспечение общего интерфейса к драйверам устройств, именование устройств, защита устройств, обеспечение независимого размера блока, буферизация, распределение памяти на блок-ориентированных устройствах, распределение и освобождение выделенных устройств, уведомление об ошибках. 7

69. Назначение пользовательского программного обеспечения ввода-вывода: обращение к системным вызовам ввода-вывода (через библиотечные процедуры), форматный ввод-вывод (изменение формата, например, в ASCII), спулинг (для выделенных устройств) --- создание процесса (например, демон печати) и каталога спулера. 10

70. Понятие спулинга (spooling) в устройствах ввода-вывода: основное назначение спулинга --- создать видимость разделения устройства ввода-вывода, которое фактически является устройством с последовательным доступом и должно использоваться только монопольно и быть закреплённым за процессом. Например, несколько приложений должны выводить на печать результаты своей работы. Каждому процессу предоставляют виртуальный принтер, и поток выводимых символов сначала направляют в специальный файл на диске (спул-файл --- spool-file) и только по окончании виртуальной печати выводят содержимое спул-файла на принтер. 1

71. Какие файлы относятся к категории «суперскрытые»: к ним относятся все файлы, необходимые для запуска операционной системы. 5

72. Как можно наблюдать скрытые файлы в Windows: чтобы администратор мог просматривать «суперскрытые» файлы с помощью Проводника, нужно выбрать на панели управления значок «Свойства папки», перейти на вкладку «Вид», затем в поле «Дополнительная настройка» установить переключатель. 5

73. Чтобы неограниченно долго ожидать при загрузке выбора ОС, можно изменить таймаут меню загрузки. Для этого можно использовать параметры загрузки, окно конфигурации системы (MSConfig) или окно свойств системы. 1

74. В качестве альтернативы Windows NT-XP можно рассмотреть, например, Linux. Большинство современных дистрибутивов Linux позволяют установить их в конфигурации с двойной загрузкой с Windows. 4

75. Если неисправен драйвер видеосистемы, можно попробовать следующее:

    - Переименовать, переместить или удалить соответствующий файл. Если известно имя файла, вызывающего ошибку, следует загрузиться в режим DOS, если тип основной файловой системы FAT, или в параллельную систему NT, если это NTFS. Далее необходимо временно переименовать исходный файл. 3

    - Редактировать системный реестр. Для этого нужно иметь альтернативный путь доступа к системе NT. Например, использовать параллельную установку системы NT на том же компьютере либо подключить диск с системным разделом NT к компьютеру с другой системой NT. 3

76. Чтобы избежать вывода графической заставки в режиме VGA, можно зайти в безопасный режим Windows, удалить драйверы видеокарты, установить их заново и выставить корректные параметры. 28

77. Чтобы загрузить Windows NT в безопасном режиме, во время загрузки нужно нажать F8 для входа в специальное меню, содержащее пункт Safe Mode. 10

78. Чтобы организовать вывод имён всех загружаемых драйверов в Windows NT, можно просмотреть записи этапа загрузки системы, чтобы установить, какие драйверы вошли в состав загрузочной конфигурации. 10

79. ---

80. ---

81. Механизм загрузки низкоуровневых и высокоуровневых драйверов Windows:

    1. Драйверы низкого уровня (Boot start) --- утилиты, которые действуют на уровне БИОС. Они используются для загрузки компьютера и инициализации ОС, отвечают за управление ресурсами, ввод-вывод и обработку ошибок. 5

    2. Драйверы высокого уровня (System start) --- действуют на уровне ОС, а не БИОС. Они подгружаются только после того, как операционная система уже инициализировала и выстроила дерево устройств (то есть опознала, какое именно периферийное оборудование к ней подключено). Эти программы управляются менеджерами Plug and Play. Драйвера данного типа необходимо устанавливать для каждого отдельного устройства или компонента ПК (например, звуковой карты, кулера или принтера). 5

82. Подсистема ввода-вывода в Windows NT управляет вводом-выводом. Она включает в себя менеджер ввода-вывода, предоставляющий средства ввода-вывода, независимые от устройств, файловые системы (NT-драйверы), выполняющие файл-ориентированные запросы на ввод-вывод и транслирующие их в вызовы обычных устройств, сетевой редиректор и сетевой сервер --- драйверы файловых систем, передающие удалённые запросы на ввод-вывод на машины сети и получающие запросы от них, драйверы устройств NT executive --- низкоуровневые драйверы, которые непосредственно управляют устройством, и менеджер кэша, реализующий кэширование диска. 1

83. Подсистема регистрации пользователя в Windows NT состоит из трёх компонентов: Winlogon.exe, GINA DLL и, возможно, нескольких сетевых библиотек (Network Providers), осуществляющих вторичную авторизацию, например на файл-сервере собственной разработки. 2

84. Автоматически стартующие сервисы --- это сервисы, которые запускаются вместе с системой при включении компьютера. Например, драйверы --- небольшие утилиты, которые помогают компьютеру распознать подключённые устройства: видеокарту, микрофон, мышь, клавиатуру и колонки. 4

85. Записи журнала событий хранятся в ключе реестра HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog. По умолчанию имеются: файл журнала приложений --- для событий приложений и служб, файл журнала безопасности --- для событий системы аудита, файл системного журнала --- для событий драйверов устройств. 6

86. Основные этапы запуска Windows NT:

    1. Фаза начальной загрузки. 38 При загрузке NTLDR в память управление передаётся модулю StartUp, при этом центральный процессор работает в реальном режиме. 3 Основная задача StartUp --- перевод процессора в защищённый режим, что позволяет использовать 32-разрядную адресацию памяти, а также создать таблицу дескрипторов прерываний, таблицу глобальных дескрипторов, таблицу страниц и включить страничную работу с памятью. 38

    2. Инициализация подсистемы ядра и подсистемы выполнения Windows. Делается за две фазы: 38

        - Во время первой фазы создаются базовые внутренние структуры памяти и инициализируется контроллер прерываний каждого процессора. Инициализируется менеджер памяти, создаются области для файлового кэша системы, страничных и нестраничных опросов памяти. 38

        - Второй этап предполагает инициализацию драйверов устройств, которые были определены NTLDR как системные драйверы. 38

87. Условия корректной загрузки Windows NT: для корректной загрузки необходимо, чтобы все драйверы были определены NTLDR как системные драйверы. 38

88. Стадия самотестирования (bootstrapping) --- это стадия, на которой происходит загрузка и инициализация драйверов низкого уровня, которые отвечают за загрузку компьютера и инициализацию ОС. 5

89. Механизм инициализации при запуске Windows: после успешной регистрации пользователя и запуска служб и драйверов, помеченных для автоматического запуска, загрузка считается успешно завершённой. 2

90. Работа загрузчика ОС Windows NT: загрузчик ОС в NTLDR содержит основные функции для доступа к дискам IDE, отформатированным в файловых системах NTFS, FAT, CDFS (ISO 9660), ETFS или UDFS в новейших версиях операционных систем. Доступ к дискам производится через BIOS посредством встроенной программы ARC на системах с ARC или посредством сети, используя протокол TFTP. 38

91. Механизм сбора данных об аппаратной конфигурации в Windows NT заключается в том, что каждый раз при запуске компьютера под управлением Windows NT распознаватель аппаратных средств помещает в реестр список обнаруженных им устройств. На компьютерах с процессорами Intel распознавание аппаратных средств осуществляется программой Ntdetect.com и ядром Windows NT (Ntoskrnl.exe). 1

92. Чтобы определить по внешнему виду экрана степень завершённости загрузки ядра ОС при старте Windows, можно обратить внимание на индикаторную полоску, которая отображает текущее состояние процесса. В начальной фазе она заполняется прямоугольниками, а после окончания загрузки ядра индикатор полностью заполняется, и происходит переключение из текстового режима в графический. 2

93. Об инициализации ядра ОС в системах Windows 2000 сигнализирует появление графической заставки. 3 В других версиях системы о начале инициализации драйверов устройств в нижней части экрана виден индикатор статуса. В Windows XP и Windows Server 2003 он заменён анимированной полоской, которая не отражает реального времени процедуры. 7

Также в системах Windows 2000 о начале фазы загрузки ядра сигнализируют появляющиеся на экране точки, которые служат индикатором степени завершённости загрузки в память ядра (Ntoskrnl.exe) и слоя (уровня) аппаратных абстракций (hal.dll). 6

94. Ядро Windows помещает информацию о аппаратуре компьютера в раздел HKEY_LOCAL_MACHINE\HARDWARE, используя информацию, полученную от загрузчика. В состав этих данных входит информация об аппаратных компонентах на системной плате и о прерываниях, используемых конкретными аппаратными устройствами. 9

95. Состав данных об аппаратных средствах включает сведения о различных настройках, аппаратной конфигурации, пользовательских предпочтениях, которые хранятся в базе данных системной информации Registry. 7

96. На стадии инициализации ядро Windows выполняет инициализацию низкоуровневых драйверов устройств, загруженных на предыдущей стадии, загрузку и инициализацию остальных драйверов устройств, запуск программ, например Chkdsk, которые должны отработать прежде, чем будут загружены какие-либо сервисы, загрузку и инициализацию сервисов, создание файла подкачки и запуск подсистем, необходимых для работы Windows. 9

97. В системном постоянном запоминающем устройстве (ПЗУ, RAM) компьютера хранится микропрограмма управления техническим устройством, в случае с ПК --- это BIOS. 2

98. Назначение отладочной версии программы распознавания аппаратуры --- выявление и устранение возможных проблем со совместимостью аппаратуры путём детального анализа. 2

99. Для мониторинга и оптимизации Windows используются, например, диспетчер задач, производительность, просмотр событий. 2

100. В журналах Windows регистрируются события от различных источников, служба журналов событий сохраняет их в едином журнале событий, программа просмотра событий позволяет пользователю наблюдать за журналом событий, программный интерфейс (API) позволяет приложениям записывать в журнал информацию и просматривать существующие записи. 2
